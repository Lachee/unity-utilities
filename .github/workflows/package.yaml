name: Generate Unity Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  package_path: "lachee-utilities.unitypackage"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2

      # Increment the version before we do anything
      - name: Increment Version
        run: |
          chmod 774 .github/workflows/increment_version.sh
          .github/workflows/increment_version.sh package.json
      - name: Push Changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit package.json -m "ci: version bump"
          git tag v$(cat $1 | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[", \]//g')
          git push

      # Install the packager
      - name: Install Unity Packager
        run: |
          git clone https://github.com/Lachee/Unity-Package-Exporter.git tools/unity-package-exporter
          dotnet publish -c Release -o tools tools/unity-package-exporter/UnityPackageExporter
        
      # Pack the assets
      - name: Package Project
        run: |
          echo "Creating package ${{env.package_path}}"
          dotnet tools/UnityPackageExporter.dll --project ./ --output ${{env.package_path}} --exclude ".*" --exclude "Documentation" --exclude "tools"
        
      # Upload artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Unity Package
          path: ${{env.package_path}}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Unity Package
          path: ${{env.package_path}}
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Build"
          files: |
            ${{env.package_path}}