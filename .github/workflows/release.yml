name: Create Release ðŸ“¦

on:
  push:
    tags:
      - "*.*.*"

env:
  package_path: "lachee-utilities.unitypackage"

jobs:
  # build the packages
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: 
          - name: All Utilities ( complete set )
            package: lachee-utilities-complete.unitypackage
            assets: [ "**/*.cs"]
            exclude: [ "Documentation", "tools", ".*" ]
          - name: Auto Attribute
            package: lachee-utilities-only-auto-attributes.unitypackage
            assets: [ "Scripts/Attributes/**/AutoAttribute*.cs"]
            exclude: [ ]
          - name: Singletons
            package: lachee-utilities-only-singletons.unitypackage
            assets: [ "Scripts/Utilities/Singleton.cs", "Scripts/Utilities/Logger.cs" ]
            exclude: [ ]
          - name: End Of Line Converter
            package: lachee-utilities-only-eol-converter.unitypackage
            assets: [ "Scripts/Tools/Editor/EOLConversion.cs" ]
            exclude: [ ]
          - name: Binary Formatter Surrogate
            package: lachee-utilties-only-bf-surrogate.unitypackage
            assets: [ "Scripts/Utilities/Serialization/**/*.cs" ]
            exclude: [ ]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2

      # Install the packager
      - name: Install Unity Packager
        run: |
          git clone https://github.com/Lachee/Unity-Package-Exporter.git tools/unity-package-exporter
          dotnet publish -c Release -o tools tools/unity-package-exporter/UnityPackageExporter
        
      # Pack the assets
      - name: Package ${{matrix.feature.name}}
        run: |
          echo "Creating package ${{matrix.feature.name}} at ${{matrix.feature.package}}"
          dotnet tools/UnityPackageExporter.dll \
            ./ \
            ${{matrix.feature.package}} \
            --exclude "${{ join(matrix.feature.exclude, '" --exclude "')}}" \
            --assets "${{ join(matrix.feature.assets, '" --assets "')}}" \
            --assets "Scripts/Tools/Editor/HelpContext.cs"
        
      # Upload artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{matrix.feature.name}}
          path: ${{matrix.feature.package}}

  # Update the release
  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ github.ref }}
          prerelease: true
          title: Release ${{ github.ref }}
          files: artifacts/**/*.unitypackage